name: Release
on:
  push:
    branches:
      - master
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      zookeeper:
        image: wurstmeister/zookeeper:latest
        ports:
          - "2181:2181"
      kafka:
        image: wurstmeister/kafka:latest
        ports:
          - "9092:9092"
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
          KAFKA_DELETE_TOPIC_ENABLE: "true"
          KAFKA_ADVERTISED_HOST_NAME: "127.0.0.1"
          KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
          KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
          KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      schema-registry:
        image: confluentinc/cp-schema-registry:7.0.1
        ports:
          - "8081:8081"
        env:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:29092"
          SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          yarn: true
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - run: Cache dependencies
        uses: actions/cache@v3
        with:
          paths: node_modules
          key: ${{ github.sha }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: Cache dependencies
        uses: actions/cache@v3
        with:
          paths: node_modules
          key: ${{ github.sha }}
      - run: yarn build
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn release
